version: "3.7"

services:
  db:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "55005:5432"
    volumes:
      - prod-db:/var/lib/postgresql/data
    restart: unless-stopped


  # redis:
  #   container_name: redis
  #   image: redis:latest
  #   ports: 
  #     - "6379:6379"
  #   volumes: 
  #     - ${DOCKER_STORAGE}/redis:/data
  #   command: redis-server --save 60 1 --loglevel warning
  #   restart: unless-stopped
  #   networks:
  #     - infrastructure

  registry:
    restart: always
    container_name: docker-registry
    image: registry:2
    volumes:
      - /srv/docker-registry:/var/lib/registry
    ports:
      - "5000:5000"
  otel-collector:
    image: otel/opentelemetry-collector
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - /srv/prometheus/data:/data
    ports:
      - "9090:9090"
    network_mode: "host"
    command: ["--config.file=/etc/prometheus/prometheus.yml", "--storage.tsdb.path=/data"]
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    volumes:
      - /srv/grafana:/var/lib/grafana
    ports:
      - "3000:3000"

volumes:
  prod-db:
  otel-db: